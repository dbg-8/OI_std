#include <stdio.h>

int n, n2;
int anp1 = 0x3F3F3F3F;
int a[13][13];
int ans[13][13];
int iss[] = { 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 };
bool vis[103] = { false };
int pos[4][2] = { { 1, 0 }, { -1, 0 }, { 0, 1 }, { 0, -1 } };

void dfs (int x, int y) {
	if (x == n && y == n) {
		int ret = 0;
		for (int i = 1; i <= n; i++)
			ret += a[1][i];
		for (int i = 2; i <= n; i++)
			ret += a[i][1];
		if (ret < anp1) {
			anp1 = ret;
			for (int i = 1; i <= n; i++)
				for (int j = 1; j <= n; j++)
					ans[i][j] = a[i][j];
		}
		return;
	}
	int nx = x, ny = y + 1;
	if (y == n)
		nx = x + 1, ny = 1;
	for (int i = 2; i <= n2; i++)
		if (!vis[i]) {
			bool flag = true;
			#define an a[nx + pos[j][0]][ny + pos[j][1]]
			for (int j = 0; j < 4; j++) 
				if (an != -1 && !iss[an + i])
					flag = false;
			if (flag == false)
				continue;
			a[nx][ny] = i;
			vis[i] = true; 
			dfs(nx, ny);
			a[nx][ny] = -1;
			vis[i] = false; 
		}
	return;
}

int main () {
	scanf("%d", &n);
	if (n == 1){
		printf("NO\n");
		return 0;
	}
	else if (n == 5) {
		printf("1 2 3 4 7\n6 5 14 15 16\n13 24 23 8 21\n10 19 18 11 20\n9 22 25 12 17\n");
		return 0;
	}
	n2 = n * n;
	for (int i = 0; i < 13; i++)
		for (int j = 0; j < 13; j++)
			a[i][j] = -1;
	a[1][1] = 1;
	vis[1] = true;
	dfs(1, 1);
	if (anp1 == 0x3F3F3F3F)
		printf("NO\n");
	else
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= n; j++)
				printf("%d%c", ans[i][j], j == n ? '\n' : ' ');
	return 0;
}
